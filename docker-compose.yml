version: '3.8'

services:
  # MongoDB database
  mongodb:
    image: mongo:6.0
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=password
      - MONGO_INITDB_DATABASE=videocall
    volumes:
      - mongodb_data:/data/db
    networks:
      - app_network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh --quiet mongodb://root:password@localhost:27017/admin
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 40s

  # Backend service (Node.js)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: always
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://root:password@mongodb:27017/videocall
    volumes:
      - backend_data:/app/data
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      mongodb:
        condition: service_healthy

  # Frontend service (Flutter Web)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.web
    restart: always
    expose:
      - "80"
    depends_on:
      - backend
    environment:
      - BACKEND_URL=http://backend:3000
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  backend_data:
  mongodb_data: 